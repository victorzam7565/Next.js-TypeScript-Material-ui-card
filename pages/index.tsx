import Head from 'next/head'
import { Inter } from '@next/font/google'
import FormControl from '@mui/material/FormControl'
import FormHelperText from '@mui/material/FormHelperText'
import React , {Fragment, useState,useRef} from 'react';
import TextField from '@mui/material/TextField'
import Button from '@mui/material/Button'
const inter = Inter({ subsets: ['latin'] })
import AspectRatio from '@mui/joy/AspectRatio';
import Card from '@mui/joy/Card';
import Typography from '@mui/joy/Typography';
import { Grid } from '@mui/material'

interface ITask {
  name:string;
  done:boolean;
}


export default function Home():JSX.Element {

const [newTask,setNewTask]= useState<string> ('');
const [tasks,setTasks]=useState<ITask[]>([]);//*



const handleSubmit = (e:any)=>{
  e.preventDefault();
  addTask(newTask)
  setNewTask('')
  console.log(tasks)
}



const addTask =(name:string):void=>{
  const newTasks: ITask[] =[...tasks,{name,done:false}]
   setTasks(newTasks)
};


const toggleDoneTask= (i:number) :void=>{
const newTasks: ITask[]=[...tasks];
   newTasks[i].done = !newTasks[i].done;
   setTasks(newTasks)
}

const removeTask=(i:number) :void=>{
 const newTasks: ITask[] = [...tasks];
 newTasks.splice(i,1,);
 setTasks(newTasks);
}



  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
      </Head>
        <> 
        <Grid container
  direction="row"
  justifyContent="center"
  alignItems="center"> 
        <Card variant="outlined"
         sx={{ width: 520 ,height:520}}> 
        <Typography textAlign={'center'} >
      Tareas
      </Typography>
      <Typography>Crea la tarea hecha y verifica sus cambios, February 06 , 2023</Typography>
       <AspectRatio minHeight="5px" maxHeight="5px" sx={{ my: 2 }}/>
        
        <img
          src="https://images.unsplash.com/photo-1527549993586-dff825b37782?auto=format&fit=crop&w=286"
          srcSet="https://images.unsplash.com/photo-1527549993586-dff825b37782?auto=format&fit=crop&w=286&dpr=2 2x"
          loading="lazy"
          alt=""
  />*

<FormControl >
<TextField 
  //id=""
  required
label="enviar"
value={newTask}
 onChange={e =>setNewTask(e.target.value)}
/>
<Button variant="contained" color="warning" 
onClick={handleSubmit}>enviar</Button>
      
<FormHelperText ></FormHelperText>
</FormControl>
</Card>
</Grid>

{tasks.map((t:ITask, i:number) =>{return (

<div key={i}> 
<Grid container direction="row" justifyContent="center" alignItems="center"> 
<Card variant="outlined" sx={{ width: 520 ,height:220}}>
<h1 style={{textDecoration:t.done ? "line-through" : " "}} 
 key={i}>{t.name}</h1>
   <div> 



<Button  variant="contained" color="secondary"
onClick={()=>toggleDoneTask(i)}>Validar{t.done ?'   âœ“' :  'âœ˜ '} 
</Button>
          


<Button variant="contained" color="primary"
onClick={()=>removeTask(i)}
>eliminar ðŸ—‘</Button>



  </div>  
    </Card>
      </Grid>
          </div>)
})
}


        </>
      
    </>
  )
}
